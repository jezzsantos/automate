<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net6.0</TargetFramework>
        <RootNamespace>Automate.CLI</RootNamespace>
        <IsPackable>true</IsPackable>
        <Title>automate</Title>
        <AssemblyName>$(Title)</AssemblyName>
        <PackageId>$(Title)</PackageId>
        <Product>$(Title)</Product>
    </PropertyGroup>

    <PropertyGroup>
        <PackAsTool>true</PackAsTool>
        <ToolCommandName>$(Title)</ToolCommandName>
        <PackageOutputPath>./nupkg</PackageOutputPath>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Humanizer" Version="2.14.1" />
        <PackageReference Include="Microsoft.ApplicationInsights.WorkerService" Version="2.21.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.1" />
        <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="6.0.0" />
        <PackageReference Include="NReco.Logging.File" Version="1.1.5" />
        <PackageReference Include="Scriban" Version="5.4.0" />
        <PackageReference Include="Semver" Version="2.1.0" />
        <PackageReference Include="System.CommandLine" Version="2.0.0-beta3.22114.1" />
        <PackageReference Include="System.CommandLine.NamingConventionBinder" Version="2.0.0-beta3.22114.1" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Core\Core.csproj" />
    </ItemGroup>
    <ItemGroup>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
            <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
        </AssemblyAttribute>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
            <_Parameter1>CLI.UnitTests</_Parameter1>
        </AssemblyAttribute>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
            <_Parameter1>CLI.IntegrationTests</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Update="Infrastructure\OutputMessages.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>OutputMessages.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="ExceptionMessages.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>ExceptionMessages.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Update="Infrastructure\InfrastructureMessages.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>InfrastructureMessages.Designer.cs</LastGenOutput>
        </EmbeddedResource>
        <EmbeddedResource Include="appsettings.json">
        </EmbeddedResource>
    </ItemGroup>
    <ItemGroup>
        <Compile Update="Infrastructure\OutputMessages.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>OutputMessages.resx</DependentUpon>
        </Compile>
        <Compile Update="ExceptionMessages.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>ExceptionMessages.resx</DependentUpon>
        </Compile>
        <Compile Update="Infrastructure\InfrastructureMessages.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>InfrastructureMessages.resx</DependentUpon>
        </Compile>
    </ItemGroup>
    <ItemGroup>
        <None Include="..\..\README.md" Pack="true" PackagePath="\" />
    </ItemGroup>
    <ItemGroup>
        <None Update="appsettings.local.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <!-- Install the dotnet tool locally (but only in Release) -->
    <Target Name="Install locally" AfterTargets="Build" Condition="'$(Configuration)'=='Release' and '$(IS_CI_BUILD)'==''">
        <Exec Command="dotnet tool uninstall $(PackageId) --global" ContinueOnError="WarnAndContinue" />
        <Exec Command="dotnet pack --no-build --configuration $(Configuration) /p:Version=$(PackageVersion)" />
        <Exec Command="dotnet tool install $(PackageId) --global --add-source $(PackageOutputPath) --version $(PackageVersion)" />
        <Message Importance="high" Text="'$(PackageId)' installed locally, successfully" />
    </Target>
</Project>
