<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
                id="root"
                xmlns="">
        <xsd:element name="root" msdata:IsDataSet="true">

        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="CommandLine_Output_NoPatternSelected" xml:space="preserve">
        <value>No Pattern is in use. You must run `automate pattern create &lt;Name&gt;` first to create a pattern</value>
    </data>
    <data name="CommandLine_Output_PatternInUse" xml:space="preserve">
        <value>Pattern: {0} ({1}) is in use</value>
    </data>
    <data name="CommandLine_Output_PatternCreated" xml:space="preserve">
        <value>Pattern: {Name} was created with ID: {PatternId}</value>
    </data>
    <data name="CommandLine_Output_PatternSwitched" xml:space="preserve">
        <value>Pattern: {Name} is the default with ID: {PatternId}</value>
    </data>
    <data name="CommandLine_Output_CodeTemplatedAdded" xml:space="preserve">
        <value>Added code template {Name} from: {FilePath}</value>
    </data>
    <data name="CommandLine_Output_NoCodeTemplates" xml:space="preserve">
        <value>There are no code templates</value>
    </data>
    <data name="CommandLine_Output_AttributeAdded" xml:space="preserve">
        <value>Added attribute '{Name}' to element {ParentId}</value>
    </data>
    <data name="CommandLine_Output_ElementAdded" xml:space="preserve">
        <value>Added element '{Name}' to element {ParentId}</value>
    </data>
    <data name="CommandLine_Output_CollectionAdded" xml:space="preserve">
        <value>Added collection '{Name}' to element {ParentId}</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandAdded" xml:space="preserve">
        <value>Added code template command '{Name}' with ID: {CommandId}</value>
    </data>
    <data name="CommandLine_Output_LaunchPointAdded" xml:space="preserve">
        <value>Added launch point for commands with name: '{Name}'</value>
    </data>
    <data name="CommandLine_Output_NoToolkitSelected" xml:space="preserve">
        <value>No Toolkit is in use. You must run `automate toolkit install &lt;FilePath&gt;` first, to install a toolkit</value>
    </data>
    <data name="CommandLine_Output_ToolkitInUse" xml:space="preserve">
        <value>Toolkit: {0} ({1}) is being used</value>
    </data>
    <data name="CommandLine_Output_BuiltToolkit" xml:space="preserve">
        <value>Toolkit for pattern: {0} has been built (v.{1}), and is ready to be installed with `automate toolkit install {2}`</value>
    </data>
</root>