<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
                id="root"
                xmlns="">
        <xsd:element name="root" msdata:IsDataSet="true">

        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="CommandLine_Output_Preamble_NoPatternSelected" xml:space="preserve">
        <value>No Pattern is being edited. You must first run one of these commands:
`automate create pattern &lt;Name&gt;` to create a new pattern, or
`automate edit switch &lt;Name&gt;` to switch to an existing pattern</value>
    </data>
    <data name="CommandLine_Output_Preamble_CurrentPatternInUse" xml:space="preserve">
        <value>The Pattern: '{Name}' (v.{Version}) is now being edited</value>
    </data>
    <data name="CommandLine_Output_PatternSwitched" xml:space="preserve">
        <value>The Pattern: '{Name}' (ID: '{PatternId}') is now the default</value>
    </data>
    <data name="CommandLine_Output_PatternCreated" xml:space="preserve">
        <value>The Pattern: '{Name}' was created with ID: {PatternId}</value>
    </data>
    <data name="CommandLine_Output_PatternUpdated" xml:space="preserve">
        <value>The Pattern: '{Name}' was updated</value>
    </data>
    <data name="CommandLine_Output_NoEditablePatterns" xml:space="preserve">
        <value>There are no editable Patterns yet. Use this command to create one:
`automate create pattern &lt;PatternName&gt;`</value>
    </data>
    <data name="CommandLine_Output_EditablePatternsListed" xml:space="preserve">
        <value>Editable patterns:
{Patterns}</value>
    </data>
    <data name="CommandLine_Output_CodeTemplatedAdded" xml:space="preserve">
        <value>Added Code Template: '{Name}' (ID: '{Id}') to element '{ParentId}', from: '{FilePath}'. Contents can be edited in: '{EditorPath}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplatedEdited" xml:space="preserve">
        <value>Editing Code Template: '{Name}' (ID: '{Id}') on element '{ParentId}', with '{ApplicationPath}' from '{EditorPath}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateDeleted" xml:space="preserve">
        <value>Deleted Code Template: '{Name}' (ID: '{Id}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateTested" xml:space="preserve">
        <value>Code Template '{Name}' (ID: '{Id}') outputs:
{Output}</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateTestImported" xml:space="preserve">
        <value>Data for testing Code Template '{Name}' (ID: '{Id}') was imported from: '{Imported}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateTestExported" xml:space="preserve">
        <value>Data from testing Code Template '{Name}' (ID: '{Id}') has been exported to: '{Exported}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandTested" xml:space="preserve">
        <value>Code Template Command '{Name}' (ID: '{Id}') target path resolves to:
{Output}</value>
    </data>
    <data name="CommandLine_Output_TextTemplatingExpressionReference" xml:space="preserve">
        <value>Templating Expression Language Reference: https://github.com/scriban/scriban/tree/master/doc</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandTestImported" xml:space="preserve">
        <value>Data for testing Code Template Command '{Name}' (ID: '{Id}') was imported from: '{Imported}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandTestExported" xml:space="preserve">
        <value>Data from testing Code Template Command '{Name}' (ID: '{Id}') has been exported to: '{Exported}'</value>
    </data>
    <data name="CommandLine_Output_PatternConfiguration" xml:space="preserve">
        <value>Pattern '{0}' (ID: '{1}', v{2}) is defined as:
{Tree}</value>
    </data>
    <data name="CommandLine_Output_PatternLaunchableAutomation" xml:space="preserve">
        <value>Pattern '{0}' (ID: '{1}', v{2}) has these launch points available:
{LaunchPoints}</value>
    </data>
    <data name="CommandLine_Output_AttributeAdded" xml:space="preserve">
        <value>Added Attribute: '{Name}' (ID: '{AttributeId}') to element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_AttributeUpdated" xml:space="preserve">
        <value>Updated Attribute: '{Name}' (ID: '{AttributeId}') on element '{ParentId}', successfully</value>
    </data>
    <data name="CommandLine_Output_AttributeDeleted" xml:space="preserve">
        <value>Deleted Attribute: '{Name}' (ID: '{AttributeId}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_ElementAdded" xml:space="preserve">
        <value>Added Element: '{Name}' (ID: '{ElementId}') to element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_ElementUpdated" xml:space="preserve">
        <value>Updated Element: '{Name}' (ID: '{ElementId}') on element '{ParentId}', successfully</value>
    </data>
    <data name="CommandLine_Output_ElementDeleted" xml:space="preserve">
        <value>Deleted Element: '{Name}' (ID: '{ElementId}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CollectionAdded" xml:space="preserve">
        <value>Added Collection: '{Name}' (ID: '{ElementId}') to element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CollectionUpdated" xml:space="preserve">
        <value>Updated Collection: '{Name}' (ID: '{ElementId}') on element '{ParentId}', successfully</value>
    </data>
    <data name="CommandLine_Output_CollectionDeleted" xml:space="preserve">
        <value>Deleted Collection: '{Name}' (ID: '{ElementId}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandAdded" xml:space="preserve">
        <value>Added Code Template Command: '{Name}' (ID: '{CommandId}') to element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CodeTemplateCommandUpdated" xml:space="preserve">
        <value>Updated Code Template Command '{Name}' (ID: '{CommandId}') on element '{ParentId}', with path: {FilePath}, and OneOff: {OneOff}</value>
    </data>
    <data name="CommandLine_Output_CliCommandAdded" xml:space="preserve">
        <value>Added CLI Command: '{Name}' (ID: '{CommandId}') to element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_CliCommandUpdated" xml:space="preserve">
        <value>Updated CLI Command '{Name}' (ID: '{CommandId}') on element '{ParentId}', with app: {ApplicationName}, and Arguments: {Arguments}</value>
    </data>
    <data name="CommandLine_Output_CommandDeleted" xml:space="preserve">
        <value>Deleted Command: '{Name}' (ID: '{CommandId}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_LaunchPointAdded" xml:space="preserve">
        <value>Added Launch Point '{Name}' (ID: '{LaunchPointId}') to element '{ParentId}', for commands: {Commands}</value>
    </data>
    <data name="CommandLine_Output_LaunchPointUpdated" xml:space="preserve">
        <value>Updated Launch Point '{Name}' (ID: '{LaunchPointId}') on element '{ParentId}', with commands: {Commands}</value>
    </data>
    <data name="CommandLine_Output_LaunchPointDeleted" xml:space="preserve">
        <value>Deleted Launch Point '{Name}' (ID: '{LaunchPointId}') from element '{ParentId}'</value>
    </data>
    <data name="CommandLine_Output_BuiltToolkit" xml:space="preserve">
        <value>Toolkit for pattern: '{Name}' has been built (v.{Version}), and is ready to be installed with command:
`automate install toolkit "{&lt;FilePath&gt;}"`</value>
    </data>
    <data name="CommandLine_Output_BuiltToolkit_Warning" xml:space="preserve">
        <value>Warning: {Warning}</value>
    </data>
    <data name="CommandLine_Output_InstalledToolkit" xml:space="preserve">
        <value>Toolkit for pattern: '{Name}' (v.{Version}) has been installed and is ready to use with command:
`automate run toolkit &lt;PatternName&gt; --name "DraftName"`</value>
    </data>
    <data name="CommandLine_Output_CreateDraftFromToolkit" xml:space="preserve">
        <value>Created a new Draft '{Name}' (ID: '{DraftId}') from toolkit: '{PatternName}'</value>
    </data>
    <data name="CommandLine_Output_NoInstalledToolkits" xml:space="preserve">
        <value>There are no installed Toolkits yet</value>
    </data>
    <data name="CommandLine_Output_InstalledToolkitsListed" xml:space="preserve">
        <value>Installed toolkits:
{Toolkits}</value>
    </data>
    <data name="CommandLine_Output_NoInstalledDrafts" xml:space="preserve">
        <value>There are no Drafts yet. Use this command to create one:
`automate run toolkit &lt;PatternName&gt; --name &lt;DraftName&gt;`</value>
    </data>
    <data name="CommandLine_Output_InstalledDraftsListed" xml:space="preserve">
        <value>Drafts:
{Drafts}</value>
    </data>
    <data name="CommandLine_Output_Preamble_NoDraftSelected" xml:space="preserve">
        <value>No Draft is being configured. You must first run one of these commands:
`automate run toolkit &lt;PatternName&gt; --name &lt;DraftName&gt;` to create a new draft from an existing toolkit, or
`automate run switch &lt;DraftID&gt;` to switch to this existing draft</value>
    </data>
    <data name="CommandLine_Output_Preamble_TestingOnly" xml:space="preserve">
        <value>This is only for testingonly</value>
    </data>
    <data name="CommandLine_Output_Preamble_CurrentDraftInUse" xml:space="preserve">
        <value>The Draft: '{Name}' (ID: '{DraftId}') is now being configured</value>
    </data>
    <data name="CommandLine_Output_DraftSwitched" xml:space="preserve">
        <value>The Draft: '{Name}' (ID: '{DraftId}') is now the default</value>
    </data>
    <data name="CommandLine_Output_DraftConfigured" xml:space="preserve">
        <value>The Draft Item '{raftName}' (ID: '{DraftItemId}') was configured successfully</value>
    </data>
    <data name="CommandLine_Output_DraftResetElement" xml:space="preserve">
        <value>The Draft Item '{Name}' (ID: '{DraftItemId}') was reset successfully</value>
    </data>
    <data name="CommandLine_Output_DraftEmptyCollection" xml:space="preserve">
        <value>The Draft Item '{Name}' (ID: '{DraftItemId}') was cleared successfully</value>
    </data>
    <data name="CommandLine_Output_DraftDelete" xml:space="preserve">
        <value>The Draft Item '{Name}' (ID: '{DraftItemId}') was deleted successfully</value>
    </data>
    <data name="CommandLine_Output_DraftConfiguration" xml:space="preserve">
        <value>Draft '{Name}' (ID: '{DraftId}') is configured as:
{Configuration}</value>
    </data>
    <data name="CommandLine_Output_DraftValidationFailed" xml:space="preserve">
        <value>Draft '{Name}' (ID: '{DraftId}') is not correctly configured in these ways:
{Errors}</value>
    </data>
    <data name="CommandLine_Output_DraftValidationSuccess" xml:space="preserve">
        <value>Draft '{Name}' (ID: '{DraftId}') is configured correctly</value>
    </data>
    <data name="CommandLine_Output_CommandExecutionSucceeded" xml:space="preserve">
        <value>The Command: '{Command}' executed successfully:
{Log}</value>
    </data>
    <data name="CommandLine_Output_CommandExecutionFailed" xml:space="preserve">
        <value>The Command: '{Command}' did not completely succeed. Some commands failed:
{Log}</value>
    </data>
    <data name="CommandLine_Output_DraftUpgradeSucceeded" xml:space="preserve">
        <value>Successfully upgraded Draft '{Name}' (ID: '{DraftId}') from toolkit '{ToolkitName}' ({OldVersion} -> {NewVersion}):
{Log}</value>
    </data>
    <data name="CommandLine_Output_DraftUpgradeWithWarning" xml:space="preserve">
        <value>Aborted upgrade of Draft '{Name}' (ID: '{DraftId}') from toolkit '{ToolkitName}' ({OldVersion} -> {NewVersion}):
{Log}</value>
    </data>
    <data name="CommandLine_Output_DraftUpgradeFailed" xml:space="preserve">
        <value>Failed to upgrade Draft '{Name}' (ID: '{DraftId}') from toolkit '{ToolkitName}' ({OldVersion} -> {NewVersion}):
{Log}</value>
    </data>
    <data name="CommandLine_Output_ToolkitConfiguration" xml:space="preserve">
        <value>Toolkit pattern '{0}' (ID: '{1}', v{2}) is defined as:
{Tree}</value>
    </data>
    <data name="CommandLine_Output_ExecuteLaunchPointSucceededNoOutput" xml:space="preserve">
        <value>Everything is up to date</value>
    </data>
    <data name="CommandLine_Output_UpgradedDraftSucceededNoOutput" xml:space="preserve">
        <value>Upgraded without any changes</value>
    </data>
    <data name="CommandLine_Output_TestingOnly" xml:space="preserve">
        <value>amessagetemplate {aname}</value>
    </data>
</root>